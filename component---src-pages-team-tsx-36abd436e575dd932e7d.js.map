{"version":3,"file":"component---src-pages-team-tsx-36abd436e575dd932e7d.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/team/memberDescription.tsx","webpack://gatsby-starter-default/./src/components/team/member.tsx","webpack://gatsby-starter-default/./src/components/team/teamGrid.tsx","webpack://gatsby-starter-default/./src/pages/team.tsx"],"sourcesContent":["import React, { CSSProperties } from 'react';\nimport MemberCanvas from './memberCanvas';\nimport classNames from 'classnames'\nimport { FullMember } from './model';\n\ninterface MemberDescriptionProps {\n  member: MemberCanvas | FullMember;\n  visible: boolean;\n  right: boolean;\n  memberStyle?: CSSProperties;\n  handleClick?: (event: any) => void\n  toggleDescription: () => void\n}\n\nconst MemberDescription = (props: MemberDescriptionProps) => {\n  const { visible, right, memberStyle, member, handleClick, toggleDescription } = props\n  const descriptionClass = classNames('cp-member__description', {'cp-member__description--visible': visible}, {'cp-member__description--right': right})\n  return (\n    <div className={descriptionClass} style={memberStyle} onClick={handleClick}>\n        <button className=\"cp-member__description-close\" onClick={toggleDescription}>\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"22\" height=\"22\" viewBox=\"0 0 24 24\"><path d=\"M24 20.188l-8.315-8.209 8.2-8.282-3.697-3.697-8.212 8.318-8.31-8.203-3.666 3.666 8.321 8.24-8.206 8.313 3.666 3.666 8.237-8.318 8.285 8.203z\"/></svg>\n        </button>\n        <div className=\"cp-member__description-info\">\n          <h5 className=\"cp-member__description-title\">{member.name}</h5>\n          <p className=\"cp-member__description-extras\"><strong>{member.nick && <>@{member.nick} - </>}{member.role}</strong></p>\n        </div>\n        <p className=\"cp-member__description-text\">\n          {member.description}\n        </p>\n        {member.social && member.social.length > 0 && <ul className=\"cp-member__social\">\n          {member.social.map(s => (  \n            <li key={`${member.id}-social-${s.label}`}>\n              <a className=\"cp-member__social-link\" href={s.link} target=\"_blank\" rel=\"noopener noreferrer\">{s.label}</a>  \n            </li>\n          ))}\n        </ul>}\n      </div>\n  )\n}\n\nexport default MemberDescription;","import React, { useCallback, useState, useEffect, useRef } from 'react'\nimport { FullMember } from './model'\nimport classNames from 'classnames'\nimport MemberDescription from './memberDescription';\n\ninterface MemberProps {\n  member: FullMember,\n  openId: string,\n  toggleOpen: (id: string) => void\n}\n\nconst Member = (props: MemberProps) => {\n  const [right, setRight] = useState(false);\n  const [width, setWidth] = useState<number | 'auto'>(0);\n  const [nodeImg, setNodeImg] = useState({node: null, boundingClientRect: null});\n\n  const { member, openId, toggleOpen } = props \n  const open = openId === member.id\n\n  const rightSide = (img) => {\n    const halfWindowWidth = window.innerWidth / 2;\n    const center = img.x + (img.width / 2)\n    return center > halfWindowWidth\n  }\n\n  const availableSpace = (img, right) => {\n    if (window.innerWidth > 768) {\n      const space = 30\n      if (!right) {\n        return window.innerWidth - img.x - img.width - space\n      } \n      return img.x - space\n    }\n    return 'auto';\n  }\n\n  const setDescriptionStyle = (node) => {\n    const isRight = rightSide(node)\n    setRight(isRight)\n    setWidth(availableSpace(node, isRight))\n  }\n\n  const imgCallBack = useCallback(node => {\n    if (node !== null) {\n      setDescriptionStyle(node.getBoundingClientRect())\n      setNodeImg({node: node, boundingClientRect: node.getBoundingClientRect()})\n    }\n  }, []);\n\n  const handleResize = () => {\n    if (nodeImg) {\n      setDescriptionStyle(nodeImg.node.getBoundingClientRect());\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('resize', handleResize)\n    return () => { window.removeEventListener('resize', handleResize)}\n  })\n\n\n  const plusClass = classNames('cp-member__plus', {'cp-member__plus--hidden': open})\n  \n  const descriptionStyle = {\n    width: width\n  }\n\n  const toggleDescription = () => {\n    toggleOpen(member.id);\n  }\n\n  return (\n    <div className=\"cp-member\" ref={imgCallBack}>\n      <div className=\"cp-member__content\">\n        <img className=\"cp-member__img\" src={member.img} alt={member.name} />\n        <div className=\"cp-member__info\">\n          <h4 className=\"cp-member__title\"><span>{member.name}</span></h4>\n          <p>{member.nick && <>@{member.nick}</>} {member.nick && member.role && <>-</>} {member.role}</p>\n        </div>\n        <button className={plusClass} onClick={toggleDescription}>+</button>\n      </div>\n      <MemberDescription visible={open} right={right} memberStyle={descriptionStyle} member={member} toggleDescription={toggleDescription} />\n    </div>\n  )\n}\n\nexport default Member","import React, { useState } from 'react'\nimport Member from './member'\nimport { FullMember } from './model'\n\nexport interface TeamMembers {\n  team: FullMember[]\n}\n\nconst TeamGrid = (props: TeamMembers) => {\n  const [open, setOpen] = useState<string>()\n\n  const openDescription = (id: string) => {\n    if (open && open === id ) {\n      setOpen(null)\n    } else {\n      setOpen(id)\n    }\n  }\n\n  const { team } = props\n\n  return (\n    <div className=\"cp-team__grid\">\n      {team.map(m => (\n        <div className=\"cp-team__grid-item\" key={m.id}>\n          <Member member={m} openId={open} toggleOpen={openDescription}/>\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default TeamGrid","import React, { useState } from 'react'\nimport classNames from 'classnames'\nimport { useStaticQuery, graphql } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\n\nimport TeamGrid from '../components/team/teamGrid'\n\nimport data from '../assets/team/team.yaml'\n\nimport loadable from '@loadable/component'\n\nconst TeamRelations = loadable(() => import('../components/team/teamRelations'))\n\nconst Team = () => {\n\n  const [activeFilter, setActiveFilter] = useState('Tutti')\n  const [layout, setLayout] = useState('Griglia')\n\n  const files = useStaticQuery(graphql`\n    query TeamQuery {\n      allFile(filter: {relativeDirectory: {eq: \"team\"}, ext: {eq: \".png\"}}) {\n        nodes {\n          name\n          childImageSharp {\n            fluid {\n              src\n            }\n          }\n        }\n      }\n    }`\n  )\n\n  const teamMembers = data.team.map(m => {\n    const nodeImg = files.allFile.nodes.find(f => f.name === m.img)\n    const img = nodeImg ? nodeImg.childImageSharp.fluid.src : ''\n    return Object.assign({}, m, {img})\n  })\n\n  const teamFilters = teamMembers.reduce((acc, t) => {\n    const tags = t.tags || []\n    return [...acc, ...tags]\n  }, []).reduce((acc, tag) => {\n    if (acc.indexOf(tag) < 0 ){\n      return [...acc, tag]\n    }\n    return acc\n  }, [])\n\n  const filters = ['Tutti', ...teamFilters]\n\n  const visibleMembers = teamMembers.filter(t => {\n    return activeFilter === 'Tutti' || (t.tags && t.tags.includes(activeFilter))\n  })\n\n  const visibilityFilters = ['Relazioni', 'Griglia']\n\n  const gridClass = classNames('cp-team__members-grid', {\n    'cp-team__members-grid--active': layout === 'Griglia'\n  })\n\n  const relationClass = classNames('cp-team__members-relation', {\n    'cp-team__members-relation--active': layout === 'Relazioni'\n  })\n\n  const filterElements = (filter) => {\n    setActiveFilter(filter);\n    setTimeout(() => {\n      window.dispatchEvent(new Event('resize'));\n    }, 0)\n  }\n\n  const changeLayout = (layout) => {\n    setLayout(layout);\n    setTimeout(() => {\n      window.dispatchEvent(new Event('resize'));\n    }, 0)\n  }\n\n\n\n  return (\n    <Layout>\n      <SEO title=\"Team\" />\n      <div className=\"cp-internal-page cp-team\">\n        <div className=\"cp-internal-page__bg\"></div>\n        <div className=\"cp-internal-page__content cp-internal-page__content--bg cp-grid\">  \n          <div className=\"cp-grid__left cp-team__rocket\"></div>\n          <div className=\"cp-grid__container\">\n            <div className=\"cp-grid__content\">\n              <h1><span>Il</span> Team</h1>\n              <p className=\"cp-team__intro\">\n                Qualunque sia il problema dei nostri clienti, \n                siamo in grado di entrare nel loro dominio e di trovare un modo di <strong>utilizzare la tecnologia \n                per migliorare il loro metodo di lavoro</strong>, senza creare frizioni tra l’uomo e il computer. \n              </p>\n              <p className=\"cp-team__intro\">\n                <strong>Affinchè questo avvenga è necessaria una squadra di persone preparate e appassionate:</strong>\n              </p>\n            </div>\n          </div>\n        </div>\n        <div className=\"cp-team__members\">\n          <div className=\"cp-grid\">\n            <div className=\"cp-grid__container\">\n              <div className=\"cp-grid__content\">\n                <div className=\"cp-team__filters\" draggable=\"false\">\n                  <div className=\"cp-team__filters-left\">\n                    <p className=\"cp-team__filters-title\">Visualizza</p>\n                    <div className=\"cp-team__filters-buttons\">\n                      {visibilityFilters.map(f => {\n                        const buttonClass = classNames('cp-team__filters-button', {\n                          'cp-team__filters-button--selected': layout === f \n                        })\n                        return (\n                          <button className={buttonClass} type=\"button\" key={`filter-${f}`} onClick={changeLayout.bind(null, f)}>{f}</button>\n                        )\n                      })}\n                    </div>\n                  </div>\n                  <div className=\"cp-team__filters-right\">\n                    <p className=\"cp-team__filters-title\">Filtra</p>\n                    <div className=\"cp-team__filters-buttons cp-team__filters-buttons--tags\">\n                      {filters.map(f => {\n                        const buttonClass = classNames('cp-team__filters-button', {\n                          'cp-team__filters-button--selected': activeFilter === f \n                        })\n                        return (\n                          <button className={buttonClass} type=\"button\" key={`filter-${f}`} onClick={filterElements.bind(null, f)}>{f}</button>\n                        )\n                      })}\n                    </div>\n                  </div>\n                </div>\n                <div className={gridClass} >\n                  <TeamGrid team={visibleMembers} />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={relationClass} >\n            <TeamRelations team={visibleMembers} categories={teamFilters} currentCategory={activeFilter} />\n          </div>\n        </div>\n\n        <div className=\"cp-team__filters\">\n          <div className=\"cp-grid\">\n            <div className=\"cp-grid__container\">\n            </div> \n          </div>\n        </div>\n        <div className=\"cp-grid\">\n          <div className=\"cp-grid__left cp-team__spaceman\"></div>\n          <div className=\"cp-grid__container\">\n            <div className=\"cp-grid__content cp-team__content\">  \n              <h3>Perchè i Supereroi e Navicelle?</h3>\n              <p>\n                La metafora dei supereroi accompagna l’identità di CodicePlastico da anni.<br/> \n                In prima battuta è un aspetto rappresentativo del nostro carattere \"amabilmente nerd\"... del resto, chi non desidererebbe identificarsi con un eroe mascherato?\n              </p>\n              <p>\n                Se pensiamo alle figure più rappresentative del mondo dei super eroi, spesso troviamo <strong>persone ordinarie</strong> dotate di <strong>poteri fisici o mentali soprannaturali</strong>, \n                quel tipo di potere che, se sfoderato al momento opportuno, è in grado di <strong>rendere il mondo un posto migliore</strong>.\n              </p>\n              <p className=\"cp-typography__main-text cp-team__main-text\">\n                <span>Trasporre tutto nel contesto tecnologico è facile</span>:<br/> \n                conoscere la tecnologia così bene da saperla governare, essere recettivi ai cambiamenti, non smettere mai di studiare sono il nostro potere più grande. <br/>\n                <strong>E sì, anche noi possiamo rendere il mondo un posto migliore.</strong>\n              </p>\n              \n            </div>\n          </div>\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport default Team\n"],"names":["props","visible","right","memberStyle","member","handleClick","toggleDescription","descriptionClass","classNames","React","className","style","onClick","xmlns","width","height","viewBox","d","name","nick","role","description","social","length","map","s","key","id","label","href","link","target","rel","useState","setRight","setWidth","node","boundingClientRect","nodeImg","setNodeImg","openId","toggleOpen","open","setDescriptionStyle","img","halfWindowWidth","isRight","window","innerWidth","x","availableSpace","imgCallBack","useCallback","getBoundingClientRect","handleResize","useEffect","addEventListener","removeEventListener","plusClass","descriptionStyle","ref","src","alt","MemberDescription","setOpen","openDescription","team","m","Member","TeamRelations","loadable","activeFilter","setActiveFilter","layout","setLayout","files","useStaticQuery","teamMembers","data","allFile","nodes","find","f","childImageSharp","fluid","Object","assign","teamFilters","reduce","acc","t","tags","tag","indexOf","filters","visibleMembers","filter","includes","gridClass","relationClass","filterElements","setTimeout","dispatchEvent","Event","changeLayout","Layout","SEO","title","draggable","buttonClass","type","bind","TeamGrid","categories","currentCategory"],"sourceRoot":""}